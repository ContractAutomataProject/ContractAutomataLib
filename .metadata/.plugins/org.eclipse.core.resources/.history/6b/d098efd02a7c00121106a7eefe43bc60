package PFSA;
import java.util.Vector;

import FSA.Continuation;
import FSA.Transition;

/**
 * non so se va bene vector transition
 * @author basile
 *
 */
@SuppressWarnings({"rawtypes","unchecked"})
public class PFSAContinuation extends Continuation {

	private Vector[] streg;
	public PFSAContinuation(int pe, int pg, Vector<Transition> tr, Vector[] streg)
	{
		super(pe, pg ,tr);
		this.streg= streg;
	}
	
	public boolean check(int pe, int pg, Vector[] r)
	{
		return super.check(pe,pg)&&(r.equals(streg));
	}
	
	public Vector[] getStReg()
	{
		return streg;
	}
	
	public Continuation clone()
	{
		Continuation c=super.clone();
		Vector[] r= new Vector[streg.length];
		for (int i=0;i<r.length;i++)
		{
			r[i]= new Vector();
			for (int j=0;j<streg[i].size();j++)
				r[i].add(streg[i].elementAt(j));
		}
		PFSAContinuation cc= new PFSAContinuation(c.getPointerState(),c.getPointerString(),c.getTransition(),r);
		return cc;
		
	}
}
