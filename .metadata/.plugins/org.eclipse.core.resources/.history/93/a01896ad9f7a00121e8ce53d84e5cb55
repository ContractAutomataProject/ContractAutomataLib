import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

@SuppressWarnings("serial")
/**
 * class for creating, storing, loading and printing an FMA
 * @author Davide Basile
 *
 */
public class FMA  extends Automata implements java.io.Serializable
{
	private int[] rho;
	private int initial;
	private int[] finalstates;
	private int[] register;
	private Transition[] tra;
	
	/**
	 * Take in input the parameter of the automata
	 */
	public FMA()
	{
		try{
			System.out.println("*** FMA simulator ***\n" +
					"The infinite alphabet is represented by the set of natural numbers\n" +
					"-1 is used as a special character for the empty register\n" +
					"Pay attention: all the indexes start from zero, the id of the first state is always zero."); 
			InputStreamReader reader = new InputStreamReader (System.in);
	        BufferedReader myInput = new BufferedReader (reader);
			System.out.println("Insert the length of register");
			int length = Integer.parseInt(myInput.readLine());
			register = new int[length];
			for (int i=0;i<length;i++){
				System.out.println("Insert the value of the register at position "+i+" (use -1 for empty register)");	
				register[i]=Integer.parseInt(myInput.readLine());
			}
			if (this.checkRegister())
			{
				System.out.println("The automaton is not an FMA");
				register=null;
				return;
			}
			System.out.println("Insert the number of states:");
	        int states = Integer.parseInt(myInput.readLine());
	        rho= new int[states];
	        for(int i=0;i<states;i++){
	        	System.out.println("Insert the value for Rho("+i+"), use -1 for non-defined");
	        	rho[i]=Integer.parseInt(myInput.readLine());
	        }
	        System.out.println("Insert Id of initial State");
			initial = Integer.parseInt(myInput.readLine());
			System.out.println("Insert the number of final states");
			int finalstate = Integer.parseInt(myInput.readLine());
			finalstates = new int[finalstate];
			for(int i=0;i<finalstate;i++){
	        	System.out.println("Insert the Id of the final states number " + i);
	        	finalstates[i]=Integer.parseInt(myInput.readLine());
	        }
			System.out.println("Insert the number of transitions:");
			int num_trans= Integer.parseInt(myInput.readLine());
			tra = new Transition[num_trans];
			int s; int l; int f;
			for (int i=0;i<num_trans;i++){
				System.out.println("Insert start state of the transition "+i);
				s = Integer.parseInt(myInput.readLine());;
				System.out.println("Insert label of the transition "+i);
				l = Integer.parseInt(myInput.readLine());
				System.out.println("Insert arrival state of the transition "+i);
				f = Integer.parseInt(myInput.readLine());
				tra[i]= new Transition(s,l,f);
			}
			System.out.println("Do you want to save this automaton? (write yes or not)");
			if (myInput.readLine().equals("yes"))
			{
				System.out.println("Write the name of this automaton");
				super.write(this,myInput.readLine());
			}
		}
		catch (Exception e){System.out.println("Errore inserimento");}
	}
	
	
	public int[] getRegister()
	{
		return register;
	}
	
	public int[] getRho()
	{
		return rho;
	}
	
	public void updateRegister(int[] r)
	{
		this.register=r;
	}
	
	
	public void print()
	{
		System.out.println("This is the automaton:");
		System.out.println("Number of states: " + rho.length);
		System.out.println("Rho: "+ Arrays.toString(rho));
		System.out.println("Register: "+ Arrays.toString(register));
		System.out.println("Initial state: " +initial);
		System.out.println("Final states: "+Arrays.toString(finalstates));
		System.out.println("Transition: "+Arrays.toString(tra));
	}
	
	/**
	 * 
	 * @return true if the automaton is not an FMA
	 */
	private boolean checkRegister()
	{
	  for(int i=0;i<register.length;i++)
	  {
		  for (int j=i+1;j<register.length;j++)
		  {
			  if ((register[i]==register[j])&&(register[i]!=-1))
			  {
				  return true;
			  }
		  }
	  }
	  return false;
	}
	

	public void run()
	{
		InputStreamReader reader = new InputStreamReader (System.in);
        BufferedReader myInput = new BufferedReader (reader);
		System.out.println("Insert length of the string to be recognized: ");
		int sleng;int[] srec=null;
		try {
			sleng = Integer.parseInt(myInput.readLine());
			srec = new int[sleng];
			for (int i=0; i<sleng; i++){
				System.out.println("Insert the character "+i+" of the string to be recognized");
				srec[i]= Integer.parseInt(myInput.readLine());
			}
		} catch (NumberFormatException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		FMASimulator sim = new FMASimulator(this);
		if (sim.run(srec))
			System.out.println("The string "+Arrays.toString(srec)+" is accepted by the automaton");
		else
			System.out.println("The string "+Arrays.toString(srec)+" is not accepted by the automaton");
	}
}
