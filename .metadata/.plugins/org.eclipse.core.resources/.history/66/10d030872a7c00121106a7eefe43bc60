package FMA;
import java.util.Vector;

import FSA.Continuation;
import FSA.Transition;



public class FMAContinuation extends Continuation{
	private int[] register; //the register of the automaton
	
	public FMAContinuation(int pe, int pg, int[] r, Vector<Transition> tr)
	{
		super(pe,pg,tr);
		this.register = r;
	}
	
	public boolean check(int pe, int pg, int[] r)
	{
		return super.check(pe,pg)&&(r.equals(register));
	}
	public int[] getRegister()
	{
		return register;
	}
	
	public Continuation cloneWithoutTransition()
	{
		Continuation c = super.cloneWithoutTransition();
		int[] r=new int[register.length];
		System.arraycopy(register, 0, r, 0, register.length);
		return new FMAContinuation(c.getPointerState(),c.getPointerString(),r,c.getTransition());
	}
	
	public boolean equalWithoutTransition(Continuation c)
	{
		return this.getPointerState()==c.getPointerState()&&this.getPointerString()==c.getPointerString();
	}
}
