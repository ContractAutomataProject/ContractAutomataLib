<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="FMCAT">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../eclipse/java-2018-09/eclipse/"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="9"/>
    <property name="source" value="9"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="FMCAT.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.CALabelTest.constructorTest_Exception_notWellFormedIdleLabel2.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.CALabelTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.CAStateTest.constructorTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.CAStateTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.CAStateTest.toStringFinalTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.CAStateTest.toStringInitialTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.CAStateTest.toStringTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.contractAutomataTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.family.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.familyTest (1).classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.familyOrc.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.familyWithoutPO.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.getSubProductsofProduct.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.getSuperProductsofProduct.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.familyTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.maximalProducts.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.testCanonicalProducts.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.testFamilyOrc.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.testImportFamily.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.testMaximumDepth.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.testOrchestrationOfFamilyEnumerative.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.testPO.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.testReadProducts.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.testSubsetOfProductsFromIndex.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.testValidProductsOrc.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.testWriteException.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.validProducts.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FamilyTest.validProductsOrcFam.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FeatureTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FMCAT.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FMCATest.familyWithoutPO.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FMCATest.getSuperProductsofProduct.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FMCATest.importFamily.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FMCATest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FMCATest.maximalProducts.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FMCATest.orcTestSCP2020_BusinessClientxHotelxEconomyClient_empty.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FMCATest.orcTestSCP2020_BusinessClientxHotelxEconomyClient_product4858_transitions.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FMCATest.testForte2021.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FMCATest.testSelectProductSatisfyingPredicateException.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FMCATest.testToString.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FMCATest.validProductsOrcFam.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.FMCAUtilTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.JsonConverterTest.importTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.JsonConverterTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.JsonConverterTest.loadConvert.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.JsonConverterTest.test.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.JsonConverterTest.testTr.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.conversionXMLNew.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.conversionXMLNewtestSCP2020_BusinessClientxHotel.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.conversionXMLtestSCP2020_BusinessClientxHotel.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.dumbForCoverage.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.importMXENewPrincipalNoBasicStates.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.loadConvertSCP2020_BusinessClientxHotel.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.loadIllActions_exception.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.loadIllFinalStates_exception.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.p.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.parseAndCheckBasicStatesTest_SCP2020_BusinessClientxHotelxEconomyClient.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.parseAndConvertAllMxe.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.parseCoordination2021.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.parseEmptyElements_exception.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.parseIllActions_exception.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.parseMxeDuplicateBasicStates.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.parseNoFinalStates_exception.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.parsePrintLoadTest_SCP2020_BusinessClientxHotelxEconomyClient.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.parseWrongFinalStates_exception.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.parse_noxy.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCAIOTest.wrongFormatData_exception.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.ambiguousStates_exception.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.choreoConcur2021.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.choreoConcur2021projectAndComposeTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.choreoConcur2021_2.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.chorTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.chorTestControllableLazyOfferTransitions.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.chorTestLMCS2020Transitions.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.chorTestLMCS2020TransitionsToString.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.chorTest_urgent_empty.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.cloneTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.compositionTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.compositionTestSCP2020_BusinessClientxHotelxEconomyClient.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.compositionTestSCP2020_BusinessClientxHotel_closed.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.compositionTestSCP2020_BusinessClientxHotel_open.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.compositionTestSCP2020_nonassociative.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.compTestBound.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.compTestBound_noTransitions.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.compTestEmptySimple.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.compTestSimple.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.conflictingFinalStates_exception.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.constructorTest_Exception_emptyTransitions.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.conversionXMLtestSCP2020_BusinessClientxHotel.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.getRankZero.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.loadAndCheckBasicStatesTest_SCP2020_BusinessClientxHotelxEconomyClient.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.loadTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.loadVSparseSCP2020_BusinessClient.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.mpcEmptyTestLMCS2020.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.mpcEmptyTestNoDangling.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.mpcTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.noFinalStatesArray_exception.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.noFinalStatesInTransitions_exception.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.noFinalStates_exception.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.noInitialState_exception.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.orcEmptyTestNoDangling.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.orcTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.orcTestLMCS2020Transitions.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.orcTestLMCS2020TransitionsToString.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.orcTestSCP2020_BusinessClientxHotelxEconomyClient_transitions.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.orcTest_empty_lazy.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.orcTest_nonempty.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.parseAndCheckBasicStatesTest_SCP2020_BusinessClientxHotelxEconomyClient.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.print_SCP2020_BusinessClient.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.projectionTestSCP2020_BusinessClient.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.setFinalStatesOfPrinc_Exception_nullArgument.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.setTransition_Exception_nullArgument.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.unionTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATest.union_statelabelsnotnumbers.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATransitionTest.branchingCondition.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATransitionTest.constructorException.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATransitionTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATransitionTest.testEquals.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.MSCATransitionTest.toStringException.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.ProductTest.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.src.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="run.test.classpath">
        <path refid="FMCAT.classpath"/>
        <pathelement location="lib/jgraphx.jar"/>
        <pathelement location="test-libs/assertj-core-3.10.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/json-20210307.jar"/>
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <target name="init" depends="clean">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <src path="test"/>
            <classpath refid="FMCAT.classpath"/>
        </javac>
    </target>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="CALabelTest.constructorTest_Exception_notWellFormedIdleLabel2">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.CALabelTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.CALabelTest.constructorTest_Exception_notWellFormedIdleLabel2.classpath"/>
        </junit>
    </target>
    <target name="CALabelTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.CALabelTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.CALabelTest.classpath"/>
        </junit>
    </target>
    <target name="CAStateTest.constructorTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.CAStateTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.CAStateTest.constructorTest.classpath"/>
        </junit>
    </target>
    <target name="CAStateTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.CAStateTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.CAStateTest.classpath"/>
        </junit>
    </target>
    <target name="CAStateTest.toStringFinalTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.CAStateTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.CAStateTest.toStringFinalTest.classpath"/>
        </junit>
    </target>
    <target name="CAStateTest.toStringInitialTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.CAStateTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.CAStateTest.toStringInitialTest.classpath"/>
        </junit>
    </target>
    <target name="CAStateTest.toStringTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.CAStateTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.CAStateTest.toStringTest.classpath"/>
        </junit>
    </target>
    <target name="contractAutomataTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.CALabelTest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.CAStateTest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.JsonConverterTest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.MSCATransitionTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.contractAutomataTest.classpath"/>
        </junit>
    </target>
    <target name="family">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.family.classpath"/>
        </junit>
    </target>
    <target name="familyTest (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <test name="familyTest.FeatureTest" todir="${junit.output.dir}"/>
            <test name="familyTest.ProductTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.familyTest (1).classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.familyOrc">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.familyOrc.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.familyWithoutPO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.familyWithoutPO.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.getSubProductsofProduct">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.getSubProductsofProduct.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.getSuperProductsofProduct">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.getSuperProductsofProduct.classpath"/>
        </junit>
    </target>
    <target name="familyTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.familyTest.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.maximalProducts">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.maximalProducts.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.testCanonicalProducts">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.testCanonicalProducts.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.testFamilyOrc">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.testFamilyOrc.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.testImportFamily">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.testImportFamily.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.testMaximumDepth">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.testMaximumDepth.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.testOrchestrationOfFamilyEnumerative">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.testOrchestrationOfFamilyEnumerative.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.testPO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.testPO.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.testReadProducts">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.testReadProducts.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.testSubsetOfProductsFromIndex">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.testSubsetOfProductsFromIndex.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.testValidProductsOrc">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.testValidProductsOrc.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.testWriteException">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.testWriteException.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.validProducts">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.validProducts.classpath"/>
        </junit>
    </target>
    <target name="FamilyTest.validProductsOrcFam">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FamilyTest.validProductsOrcFam.classpath"/>
        </junit>
    </target>
    <target name="FeatureTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FeatureTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FeatureTest.classpath"/>
        </junit>
    </target>
    <target name="FMCAT">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.CALabelTest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.CAStateTest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.JsonConverterTest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.MSCATransitionTest" todir="${junit.output.dir}"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <test name="familyTest.FeatureTest" todir="${junit.output.dir}"/>
            <test name="familyTest.ProductTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FMCAT.classpath"/>
        </junit>
    </target>
    <target name="FMCATest.familyWithoutPO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FMCATest.familyWithoutPO.classpath"/>
        </junit>
    </target>
    <target name="FMCATest.getSuperProductsofProduct">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FMCATest.getSuperProductsofProduct.classpath"/>
        </junit>
    </target>
    <target name="FMCATest.importFamily">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FMCATest.importFamily.classpath"/>
        </junit>
    </target>
    <target name="FMCATest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FMCATest.classpath"/>
        </junit>
    </target>
    <target name="FMCATest.maximalProducts">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FMCATest.maximalProducts.classpath"/>
        </junit>
    </target>
    <target name="FMCATest.orcTestSCP2020_BusinessClientxHotelxEconomyClient_empty">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FMCATest.orcTestSCP2020_BusinessClientxHotelxEconomyClient_empty.classpath"/>
        </junit>
    </target>
    <target name="FMCATest.orcTestSCP2020_BusinessClientxHotelxEconomyClient_product4858_transitions">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FMCATest.orcTestSCP2020_BusinessClientxHotelxEconomyClient_product4858_transitions.classpath"/>
        </junit>
    </target>
    <target name="FMCATest.testForte2021">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FMCATest.testForte2021.classpath"/>
        </junit>
    </target>
    <target name="FMCATest.testSelectProductSatisfyingPredicateException">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FMCATest.testSelectProductSatisfyingPredicateException.classpath"/>
        </junit>
    </target>
    <target name="FMCATest.testToString">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FMCATest.testToString.classpath"/>
        </junit>
    </target>
    <target name="FMCATest.validProductsOrcFam">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FMCATest.validProductsOrcFam.classpath"/>
        </junit>
    </target>
    <target name="FMCAUtilTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="family.FMCAUtilTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FMCAUtilTest.classpath"/>
        </junit>
    </target>
    <target name="JsonConverterTest.importTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.JsonConverterTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.JsonConverterTest.importTest.classpath"/>
        </junit>
    </target>
    <target name="JsonConverterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.JsonConverterTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.JsonConverterTest.classpath"/>
        </junit>
    </target>
    <target name="JsonConverterTest.loadConvert">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.JsonConverterTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.JsonConverterTest.loadConvert.classpath"/>
        </junit>
    </target>
    <target name="JsonConverterTest.test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.JsonConverterTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.JsonConverterTest.test.classpath"/>
        </junit>
    </target>
    <target name="JsonConverterTest.testTr">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.JsonConverterTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.JsonConverterTest.testTr.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.conversionXMLNew">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.conversionXMLNew.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.conversionXMLNewtestSCP2020_BusinessClientxHotel">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.conversionXMLNewtestSCP2020_BusinessClientxHotel.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.conversionXMLtestSCP2020_BusinessClientxHotel">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.conversionXMLtestSCP2020_BusinessClientxHotel.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.dumbForCoverage">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.dumbForCoverage.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.importMXENewPrincipalNoBasicStates">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.importMXENewPrincipalNoBasicStates.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.loadConvertSCP2020_BusinessClientxHotel">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.loadConvertSCP2020_BusinessClientxHotel.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.loadIllActions_exception">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.loadIllActions_exception.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.loadIllFinalStates_exception">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.loadIllFinalStates_exception.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.p">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.p.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.parseAndCheckBasicStatesTest_SCP2020_BusinessClientxHotelxEconomyClient">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.parseAndCheckBasicStatesTest_SCP2020_BusinessClientxHotelxEconomyClient.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.parseAndConvertAllMxe">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.parseAndConvertAllMxe.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.parseCoordination2021">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.parseCoordination2021.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.parseEmptyElements_exception">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.parseEmptyElements_exception.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.parseIllActions_exception">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.parseIllActions_exception.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.parseMxeDuplicateBasicStates">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.parseMxeDuplicateBasicStates.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.parseNoFinalStates_exception">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.parseNoFinalStates_exception.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.parsePrintLoadTest_SCP2020_BusinessClientxHotelxEconomyClient">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.parsePrintLoadTest_SCP2020_BusinessClientxHotelxEconomyClient.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.parseWrongFinalStates_exception">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.parseWrongFinalStates_exception.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.parse_noxy">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.parse_noxy.classpath"/>
        </junit>
    </target>
    <target name="MSCAIOTest.wrongFormatData_exception">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCAIOTest.wrongFormatData_exception.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.ambiguousStates_exception">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.ambiguousStates_exception.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.choreoConcur2021">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.choreoConcur2021.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.choreoConcur2021projectAndComposeTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.choreoConcur2021projectAndComposeTest.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.choreoConcur2021_2">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.choreoConcur2021_2.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.chorTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.chorTest.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.chorTestControllableLazyOfferTransitions">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.chorTestControllableLazyOfferTransitions.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.chorTestLMCS2020Transitions">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.chorTestLMCS2020Transitions.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.chorTestLMCS2020TransitionsToString">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.chorTestLMCS2020TransitionsToString.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.chorTest_urgent_empty">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.chorTest_urgent_empty.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.cloneTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.cloneTest.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.compositionTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomata.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.compositionTest.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.compositionTestSCP2020_BusinessClientxHotelxEconomyClient">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.compositionTestSCP2020_BusinessClientxHotelxEconomyClient.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.compositionTestSCP2020_BusinessClientxHotel_closed">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.compositionTestSCP2020_BusinessClientxHotel_closed.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.compositionTestSCP2020_BusinessClientxHotel_open">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.compositionTestSCP2020_BusinessClientxHotel_open.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.compositionTestSCP2020_nonassociative">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.compositionTestSCP2020_nonassociative.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.compTestBound">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.compTestBound.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.compTestBound_noTransitions">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.compTestBound_noTransitions.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.compTestEmptySimple">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.compTestEmptySimple.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.compTestSimple">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.compTestSimple.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.conflictingFinalStates_exception">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.conflictingFinalStates_exception.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.constructorTest_Exception_emptyTransitions">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.constructorTest_Exception_emptyTransitions.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.conversionXMLtestSCP2020_BusinessClientxHotel">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.conversionXMLtestSCP2020_BusinessClientxHotel.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.getRankZero">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.getRankZero.classpath"/>
        </junit>
    </target>
    <target name="MSCATest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.loadAndCheckBasicStatesTest_SCP2020_BusinessClientxHotelxEconomyClient">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.loadAndCheckBasicStatesTest_SCP2020_BusinessClientxHotelxEconomyClient.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.loadTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.loadTest.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.loadVSparseSCP2020_BusinessClient">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.loadVSparseSCP2020_BusinessClient.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.mpcEmptyTestLMCS2020">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.mpcEmptyTestLMCS2020.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.mpcEmptyTestNoDangling">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.mpcEmptyTestNoDangling.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.mpcTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.mpcTest.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.noFinalStatesArray_exception">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.noFinalStatesArray_exception.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.noFinalStatesInTransitions_exception">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.noFinalStatesInTransitions_exception.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.noFinalStates_exception">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.noFinalStates_exception.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.noInitialState_exception">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.noInitialState_exception.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.orcEmptyTestNoDangling">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.orcEmptyTestNoDangling.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.orcTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.orcTest.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.orcTestLMCS2020Transitions">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.orcTestLMCS2020Transitions.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.orcTestLMCS2020TransitionsToString">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.orcTestLMCS2020TransitionsToString.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.orcTestSCP2020_BusinessClientxHotelxEconomyClient_transitions">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.orcTestSCP2020_BusinessClientxHotelxEconomyClient_transitions.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.orcTest_empty_lazy">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.orcTest_empty_lazy.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.orcTest_nonempty">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.orcTest_nonempty.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.parseAndCheckBasicStatesTest_SCP2020_BusinessClientxHotelxEconomyClient">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.parseAndCheckBasicStatesTest_SCP2020_BusinessClientxHotelxEconomyClient.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.print_SCP2020_BusinessClient">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.print_SCP2020_BusinessClient.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.projectionTestSCP2020_BusinessClient">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.projectionTestSCP2020_BusinessClient.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.setFinalStatesOfPrinc_Exception_nullArgument">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.setFinalStatesOfPrinc_Exception_nullArgument.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.setTransition_Exception_nullArgument">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.setTransition_Exception_nullArgument.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.unionTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.unionTest.classpath"/>
        </junit>
    </target>
    <target name="MSCATest.union_statelabelsnotnumbers">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATest.union_statelabelsnotnumbers.classpath"/>
        </junit>
    </target>
    <target name="MSCATransitionTest.branchingCondition">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATransitionTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATransitionTest.branchingCondition.classpath"/>
        </junit>
    </target>
    <target name="MSCATransitionTest.constructorException">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATransitionTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATransitionTest.constructorException.classpath"/>
        </junit>
    </target>
    <target name="MSCATransitionTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATransitionTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATransitionTest.classpath"/>
        </junit>
    </target>
    <target name="MSCATransitionTest.testEquals">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATransitionTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATransitionTest.testEquals.classpath"/>
        </junit>
    </target>
    <target name="MSCATransitionTest.toStringException">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.MSCATransitionTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.MSCATransitionTest.toStringException.classpath"/>
        </junit>
    </target>
    <target name="ProductTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="familyTest.ProductTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.ProductTest.classpath"/>
        </junit>
    </target>
    <target name="src">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.src.classpath"/>
        </junit>
    </target>
    <target name="test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="contractAutomataTest.CALabelTest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.CAStateTest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.JsonConverterTest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.MSCAIOTest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.MSCATest" todir="${junit.output.dir}"/>
            <test name="contractAutomataTest.MSCATransitionTest" todir="${junit.output.dir}"/>
            <test name="familyTest.FMCATest" todir="${junit.output.dir}"/>
            <test name="familyTest.FamilyTest" todir="${junit.output.dir}"/>
            <test name="familyTest.FeatureTest" todir="${junit.output.dir}"/>
            <test name="familyTest.ProductTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.test.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
   	<target name="main" depends="init,build,test"/>
</project>
